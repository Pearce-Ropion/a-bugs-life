# import standard Python library for SQLite
import sqlite3

# import helper Python script
import constants as c

def get_table_data(table_name, id):
	db = sqlite3.connect(c.database)

	cursor = db.cursor()

	command = 'SELECT * FROM ' + table_name
	if id is not None:
		command += (' WHERE id=' + str(id))
	cursor.execute(command)

	# gets the list of attributes for this table
	attributes_list = c.attributes[table_name]
	
	data = []
	for row in cursor:
		rowObject = {}
		counter = 0
		
		for attribute in row:
			key = attributes_list[counter]
			
			value = attribute
			# for the labels or attachments attribute, convert a comma-separated String to a list of Strings
			if (attribute is not None) and (key == 'labels' or key == 'attachments'):
				value = attribute.split(',')
			
			rowObject[key] = value
			counter += 1
		
		data.append(rowObject)

	db.close()

	if id is not None:
		return data[0]
	else:
		return data

def insert_into_db(data, table_name):
	db = sqlite3.connect(c.database)

	cursor = db.cursor()

	# gets the list of attributes for this table (except for id, because it is automatically generated by sqlite)
	attributes_list = c.attributes[table_name][1:]

	# command = 'INSERT INTO ' + table_name + '('
	command = 'INSERT INTO ' + table_name + '('
	
	# insert attributes into command
	for attribute in attributes_list:
		command += (attribute + ',')
	command = command[:-1]
	command += ') VALUES('

	for _ in range(len(attributes_list)):
		command += '?,'
	command = command[:-1]
	command += ')'

	values_list = []
	for attribute in attributes_list:
		if attribute == 'labels' or attribute == 'attachments':
			if len(data[attribute]) > 0:
				value = ','.join(data[attribute])
			else:
				value = None
		else:
			value = data[attribute]
		values_list.append(value)

	db.execute(command, tuple(values_list))
	db.commit()
	db.close()