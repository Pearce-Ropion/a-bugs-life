# import standard Python library for SQLite
import sqlite3

# import helper Python script
import constants

def execute_db_command(command, attributes_list):
	db = sqlite3.connect(constants.database)

	cursor = db.cursor()
	cursor.execute(command)

	data = None
	if attributes_list is not None:
		objects = []
		for row in cursor:
			rowObject = {}
			counter = 0
			for attribute in row:
				key = attributes_list[counter]
				# for the labels attribute, convert a comma-separated String to a list of Strings
				value = attribute if (key != 'labels') else attribute.split(',')
				rowObject[str(key)] = value
				counter += 1
			objects.append(rowObject)
		data = objects
	else:
		db.commit()

	db.close()

	return data

def get_insert_command(data, table_name):
	# gets the list of attributes for this table (except for id, because it is automatically generated by sqlite)
	attributes_list = constants.attributes[table_name][1:]

	command = 'INSERT INTO ' + table_name + '('
	
	# insert attributes into command
	for attribute in attributes_list:
		command += (attribute + ',')
	command = command[:-1]
	command += ') VALUES('

	# insert values into command
	for attribute in attributes_list:
		# for the labels attribute, convert array of String to a String separated by commas
		value = data[attribute] if (attribute != 'labels') else ','.join(data[attribute])
		command += ("'" + str(value) + "',")
	command = command[:-1]
	command += ')'

	return command